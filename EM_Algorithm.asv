function [negLogLikelihoods, weights, mus, Sigmas] = EM_Algorithm(data, numClusters, numDims,maxIterations,numPoints)

    % Define the initial parameters
    weights = ones(1, numClusters) / numClusters; % Equal weights
    mus = gpuArray(randn(numClusters, numDims)); % Random means
    Sigmas = gpuArray(ones(numClusters, numDims)); % Unit variances

    % Define the tolerance for convergence
    tol = 1e-12;

    % Initialize the log-likelihood
    logLikelihoodOld = -Inf;

    % Initialize the vector to store the negative log-likelihood at each iteration
    negLogLikelihoods = [];

    for iteration = 1:maxIterations
        % E-step: Compute the responsibilities using the current parameters
        r_nk = zeros(numPoints, numClusters, 'gpuArray');
        for i = 1:numClusters
            r_nk(:, i) = weights(i) * prod(normpdf(data, mus(i, :), ...
                                                   sqrt(Sigmas(i, :))), 2);
        end
        r_nk = r_nk ./ sum(r_nk, 2);

        % M-step: Update the parameters using the current responsibilities

        N_k = sum(r_nk, 1);
        weights = N_k / numPoints;

        for i = 1:numClusters
            mus(i, :) = r_nk(:, i)' * data / N_k(i);
            Sigmas(i, :) = r_nk(:, i)' * (data - mus(i, :)).^2 / N_k(i);
        end

        % Compute the log-likelihood
        logLikelihood = 0;
        for i = 1:numClusters
            logLikelihood = logLikelihood + weights(i) * prod(normpdf(data, ...
                                        mus(i, :), sqrt(Sigmas(i, :))), 2);
        end
        logLikelihood = sum(log(logLikelihood));

        % Store the negative log-likelihood
        negLogLikelihoods = [negLogLikelihoods, -gather(logLikelihood)];

        % Check for convergence
        if abs(logLikelihood - logLikelihoodOld) < tol
            break;
        end

        logLikelihoodOld = logLikelihood;
    end

    % Plot the negative log-likelihood over iterations
    figure;
    plot(negLogLikelihoods);
    xlabel('Iteration');
    ylabel('Negative Log-Likelihood');
end